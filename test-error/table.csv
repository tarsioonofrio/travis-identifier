NÃºmero do Teste; Nome do Teste; Casos de Teste
0; negative__COUNTING_On_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On, algorithm=COUNTING), Saida=(status=0)
1; negative__COUNTING_On_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On, algorithm=COUNTING), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
2; negative__RADIX_On_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On, algorithm=RADIX), Saida=(status=0)
3; negative__RADIX_On_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On, algorithm=RADIX), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
4; limit_min_ok__COUNTING_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(status=0)
5; limit_min_ok__COUNTING_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(array_out=['INT_MIN + 0', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
6; limit_min_ok__RADIX_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(status=0)
7; limit_min_ok__RADIX_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(array_out=['INT_MIN + 0', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
8; limit_max_ok__COUNTING_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(status=0)
9; limit_max_ok__COUNTING_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MAX + 0'])
10; limit_max_ok__RADIX_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(status=0)
11; limit_max_ok__RADIX_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MAX + 0'])
12; limit_min_err__COUNTING_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(status=0)
13; limit_min_err__COUNTING_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MIN + -1'])
14; limit_min_err__RADIX_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(status=0)
15; limit_min_err__RADIX_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MIN + -1'])
16; limit_max_err__COUNTING_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(status=0)
17; limit_max_err__COUNTING_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(array_out=['INT_MAX + 1', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
18; limit_max_err__RADIX_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(status=0)
19; limit_max_err__RADIX_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(array_out=['INT_MAX + 1', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])