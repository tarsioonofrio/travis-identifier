NÃºmero do Teste; Nome do Teste; Casos de Teste
0; basic__COUNTING_On_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=COUNTING), Saida=(status=0)
1; basic__COUNTING_On_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=COUNTING), Saida=(array_out=[1, 2, 3, 4])
2; basic__RADIX_On_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=RADIX), Saida=(status=0)
3; basic__RADIX_On_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=RADIX), Saida=(array_out=[1, 2, 3, 4])
4; basic__BUBBLE_On2_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=BUBBLE), Saida=(status=0)
5; basic__BUBBLE_On2_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=BUBBLE), Saida=(array_out=[1, 2, 3, 4])
6; basic__INSERTION_On2_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=INSERTION), Saida=(status=0)
7; basic__INSERTION_On2_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=INSERTION), Saida=(array_out=[1, 2, 3, 4])
8; basic__SELECTION_On2_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=SELECTION), Saida=(status=0)
9; basic__SELECTION_On2_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=SELECTION), Saida=(array_out=[1, 2, 3, 4])
10; basic__HEAP_Onlogn_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=HEAP), Saida=(status=0)
11; basic__HEAP_Onlogn_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=HEAP), Saida=(array_out=[1, 2, 3, 4])
12; basic__MERGE_Onlogn_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=MERGE), Saida=(status=0)
13; basic__MERGE_Onlogn_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=MERGE), Saida=(array_out=[1, 2, 3, 4])
14; basic__QUICK_Onlogn_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=QUICK), Saida=(status=0)
15; basic__QUICK_Onlogn_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=QUICK), Saida=(array_out=[1, 2, 3, 4])
16; len1__COUNTING_On_INT_1_array; Entrada=(a=[1], length=1, type=On, algorithm=COUNTING), Saida=(status=1)
17; len1__COUNTING_On_INT_1_status; Entrada(a=[1], length=1, type=On, algorithm=COUNTING), Saida=(array_out=[1])
18; len1__RADIX_On_INT_1_array; Entrada=(a=[1], length=1, type=On, algorithm=RADIX), Saida=(status=1)
19; len1__RADIX_On_INT_1_status; Entrada(a=[1], length=1, type=On, algorithm=RADIX), Saida=(array_out=[1])
20; len1__BUBBLE_On2_INT_1_array; Entrada=(a=[1], length=1, type=On2, algorithm=BUBBLE), Saida=(status=1)
21; len1__BUBBLE_On2_INT_1_status; Entrada(a=[1], length=1, type=On2, algorithm=BUBBLE), Saida=(array_out=[1])
22; len1__INSERTION_On2_INT_1_array; Entrada=(a=[1], length=1, type=On2, algorithm=INSERTION), Saida=(status=1)
23; len1__INSERTION_On2_INT_1_status; Entrada(a=[1], length=1, type=On2, algorithm=INSERTION), Saida=(array_out=[1])
24; len1__SELECTION_On2_INT_1_array; Entrada=(a=[1], length=1, type=On2, algorithm=SELECTION), Saida=(status=1)
25; len1__SELECTION_On2_INT_1_status; Entrada(a=[1], length=1, type=On2, algorithm=SELECTION), Saida=(array_out=[1])
26; len1__HEAP_Onlogn_INT_1_array; Entrada=(a=[1], length=1, type=Onlogn, algorithm=HEAP), Saida=(status=1)
27; len1__HEAP_Onlogn_INT_1_status; Entrada(a=[1], length=1, type=Onlogn, algorithm=HEAP), Saida=(array_out=[1])
28; len1__MERGE_Onlogn_INT_1_array; Entrada=(a=[1], length=1, type=Onlogn, algorithm=MERGE), Saida=(status=1)
29; len1__MERGE_Onlogn_INT_1_status; Entrada(a=[1], length=1, type=Onlogn, algorithm=MERGE), Saida=(array_out=[1])
30; len1__QUICK_Onlogn_INT_1_array; Entrada=(a=[1], length=1, type=Onlogn, algorithm=QUICK), Saida=(status=1)
31; len1__QUICK_Onlogn_INT_1_status; Entrada(a=[1], length=1, type=Onlogn, algorithm=QUICK), Saida=(array_out=[1])
32; len2__COUNTING_On_INT_1_array; Entrada=(a=[1, 2], length=2, type=On, algorithm=COUNTING), Saida=(status=0)
33; len2__COUNTING_On_INT_1_status; Entrada(a=[1, 2], length=2, type=On, algorithm=COUNTING), Saida=(array_out=[1, 2])
34; len2__RADIX_On_INT_1_array; Entrada=(a=[1, 2], length=2, type=On, algorithm=RADIX), Saida=(status=0)
35; len2__RADIX_On_INT_1_status; Entrada(a=[1, 2], length=2, type=On, algorithm=RADIX), Saida=(array_out=[1, 2])
36; len2__BUBBLE_On2_INT_1_array; Entrada=(a=[1, 2], length=2, type=On2, algorithm=BUBBLE), Saida=(status=0)
37; len2__BUBBLE_On2_INT_1_status; Entrada(a=[1, 2], length=2, type=On2, algorithm=BUBBLE), Saida=(array_out=[1, 2])
38; len2__INSERTION_On2_INT_1_array; Entrada=(a=[1, 2], length=2, type=On2, algorithm=INSERTION), Saida=(status=0)
39; len2__INSERTION_On2_INT_1_status; Entrada(a=[1, 2], length=2, type=On2, algorithm=INSERTION), Saida=(array_out=[1, 2])
40; len2__SELECTION_On2_INT_1_array; Entrada=(a=[1, 2], length=2, type=On2, algorithm=SELECTION), Saida=(status=0)
41; len2__SELECTION_On2_INT_1_status; Entrada(a=[1, 2], length=2, type=On2, algorithm=SELECTION), Saida=(array_out=[1, 2])
42; len2__HEAP_Onlogn_INT_1_array; Entrada=(a=[1, 2], length=2, type=Onlogn, algorithm=HEAP), Saida=(status=0)
43; len2__HEAP_Onlogn_INT_1_status; Entrada(a=[1, 2], length=2, type=Onlogn, algorithm=HEAP), Saida=(array_out=[1, 2])
44; len2__MERGE_Onlogn_INT_1_array; Entrada=(a=[1, 2], length=2, type=Onlogn, algorithm=MERGE), Saida=(status=0)
45; len2__MERGE_Onlogn_INT_1_status; Entrada(a=[1, 2], length=2, type=Onlogn, algorithm=MERGE), Saida=(array_out=[1, 2])
46; len2__QUICK_Onlogn_INT_1_array; Entrada=(a=[1, 2], length=2, type=Onlogn, algorithm=QUICK), Saida=(status=0)
47; len2__QUICK_Onlogn_INT_1_status; Entrada(a=[1, 2], length=2, type=Onlogn, algorithm=QUICK), Saida=(array_out=[1, 2])
48; len20__COUNTING_On_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On, algorithm=COUNTING), Saida=(status=0)
49; len20__COUNTING_On_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On, algorithm=COUNTING), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
50; len20__RADIX_On_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On, algorithm=RADIX), Saida=(status=0)
51; len20__RADIX_On_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On, algorithm=RADIX), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
52; len20__BUBBLE_On2_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On2, algorithm=BUBBLE), Saida=(status=0)
53; len20__BUBBLE_On2_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On2, algorithm=BUBBLE), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
54; len20__INSERTION_On2_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On2, algorithm=INSERTION), Saida=(status=0)
55; len20__INSERTION_On2_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On2, algorithm=INSERTION), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
56; len20__SELECTION_On2_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On2, algorithm=SELECTION), Saida=(status=0)
57; len20__SELECTION_On2_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On2, algorithm=SELECTION), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
58; len20__HEAP_Onlogn_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=Onlogn, algorithm=HEAP), Saida=(status=0)
59; len20__HEAP_Onlogn_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=Onlogn, algorithm=HEAP), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
60; len20__MERGE_Onlogn_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=Onlogn, algorithm=MERGE), Saida=(status=0)
61; len20__MERGE_Onlogn_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=Onlogn, algorithm=MERGE), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
62; len20__QUICK_Onlogn_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=Onlogn, algorithm=QUICK), Saida=(status=0)
63; len20__QUICK_Onlogn_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=Onlogn, algorithm=QUICK), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
64; len21__COUNTING_On_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On, algorithm=COUNTING), Saida=(status=1)
65; len21__COUNTING_On_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On, algorithm=COUNTING), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
66; len21__RADIX_On_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On, algorithm=RADIX), Saida=(status=1)
67; len21__RADIX_On_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On, algorithm=RADIX), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
68; len21__BUBBLE_On2_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On2, algorithm=BUBBLE), Saida=(status=1)
69; len21__BUBBLE_On2_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On2, algorithm=BUBBLE), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
70; len21__INSERTION_On2_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On2, algorithm=INSERTION), Saida=(status=1)
71; len21__INSERTION_On2_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On2, algorithm=INSERTION), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
72; len21__SELECTION_On2_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On2, algorithm=SELECTION), Saida=(status=1)
73; len21__SELECTION_On2_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On2, algorithm=SELECTION), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
74; len21__HEAP_Onlogn_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=Onlogn, algorithm=HEAP), Saida=(status=1)
75; len21__HEAP_Onlogn_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=Onlogn, algorithm=HEAP), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
76; len21__MERGE_Onlogn_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=Onlogn, algorithm=MERGE), Saida=(status=1)
77; len21__MERGE_Onlogn_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=Onlogn, algorithm=MERGE), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
78; len21__QUICK_Onlogn_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=Onlogn, algorithm=QUICK), Saida=(status=1)
79; len21__QUICK_Onlogn_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=Onlogn, algorithm=QUICK), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
80; size__COUNTING_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=On, algorithm=COUNTING), Saida=(status=0)
81; size__COUNTING_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=On, algorithm=COUNTING), Saida=(array_out=[2, 3, 4])
82; size__RADIX_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=On, algorithm=RADIX), Saida=(status=0)
83; size__RADIX_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=On, algorithm=RADIX), Saida=(array_out=[2, 3, 4])
84; size__BUBBLE_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=On2, algorithm=BUBBLE), Saida=(status=0)
85; size__BUBBLE_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=On2, algorithm=BUBBLE), Saida=(array_out=[2, 3, 4])
86; size__INSERTION_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=On2, algorithm=INSERTION), Saida=(status=0)
87; size__INSERTION_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=On2, algorithm=INSERTION), Saida=(array_out=[2, 3, 4])
88; size__SELECTION_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=On2, algorithm=SELECTION), Saida=(status=0)
89; size__SELECTION_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=On2, algorithm=SELECTION), Saida=(array_out=[2, 3, 4])
90; size__HEAP_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=Onlogn, algorithm=HEAP), Saida=(status=0)
91; size__HEAP_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=Onlogn, algorithm=HEAP), Saida=(array_out=[2, 3, 4])
92; size__MERGE_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=Onlogn, algorithm=MERGE), Saida=(status=0)
93; size__MERGE_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=Onlogn, algorithm=MERGE), Saida=(array_out=[2, 3, 4])
94; size__QUICK_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=Onlogn, algorithm=QUICK), Saida=(status=0)
95; size__QUICK_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=Onlogn, algorithm=QUICK), Saida=(array_out=[2, 3, 4])
96; negative__BUBBLE_On2_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On2, algorithm=BUBBLE), Saida=(status=0)
97; negative__BUBBLE_On2_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On2, algorithm=BUBBLE), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
98; negative__INSERTION_On2_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On2, algorithm=INSERTION), Saida=(status=0)
99; negative__INSERTION_On2_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On2, algorithm=INSERTION), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
100; negative__SELECTION_On2_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On2, algorithm=SELECTION), Saida=(status=0)
101; negative__SELECTION_On2_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On2, algorithm=SELECTION), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
102; negative__HEAP_Onlogn_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=Onlogn, algorithm=HEAP), Saida=(status=0)
103; negative__HEAP_Onlogn_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=Onlogn, algorithm=HEAP), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
104; negative__MERGE_Onlogn_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=Onlogn, algorithm=MERGE), Saida=(status=0)
105; negative__MERGE_Onlogn_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=Onlogn, algorithm=MERGE), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
106; negative__QUICK_Onlogn_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=Onlogn, algorithm=QUICK), Saida=(status=0)
107; negative__QUICK_Onlogn_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=Onlogn, algorithm=QUICK), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
108; type_algo_upper__COUNTING_ON_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on, algorithm=COUNTING), Saida=(status=1)
109; type_algo_upper__COUNTING_ON_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on, algorithm=COUNTING), Saida=(array_out=[4, 3, 2, 1])
110; type_algo_upper__RADIX_ON_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on, algorithm=RADIX), Saida=(status=1)
111; type_algo_upper__RADIX_ON_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on, algorithm=RADIX), Saida=(array_out=[4, 3, 2, 1])
112; type_algo_upper__BUBBLE_ON2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on2, algorithm=BUBBLE), Saida=(status=1)
113; type_algo_upper__BUBBLE_ON2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on2, algorithm=BUBBLE), Saida=(array_out=[4, 3, 2, 1])
114; type_algo_upper__INSERTION_ON2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on2, algorithm=INSERTION), Saida=(status=1)
115; type_algo_upper__INSERTION_ON2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on2, algorithm=INSERTION), Saida=(array_out=[4, 3, 2, 1])
116; type_algo_upper__SELECTION_ON2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on2, algorithm=SELECTION), Saida=(status=1)
117; type_algo_upper__SELECTION_ON2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on2, algorithm=SELECTION), Saida=(array_out=[4, 3, 2, 1])
118; type_algo_upper__HEAP_ONLOGN_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=HEAP), Saida=(status=1)
119; type_algo_upper__HEAP_ONLOGN_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=HEAP), Saida=(array_out=[4, 3, 2, 1])
120; type_algo_upper__MERGE_ONLOGN_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=MERGE), Saida=(status=1)
121; type_algo_upper__MERGE_ONLOGN_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=MERGE), Saida=(array_out=[4, 3, 2, 1])
122; type_algo_upper__QUICK_ONLOGN_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=QUICK), Saida=(status=1)
123; type_algo_upper__QUICK_ONLOGN_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=QUICK), Saida=(array_out=[4, 3, 2, 1])
124; type_algo_lower__COUNTING_on_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on, algorithm=COUNTING), Saida=(status=1)
125; type_algo_lower__COUNTING_on_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on, algorithm=COUNTING), Saida=(array_out=[4, 3, 2, 1])
126; type_algo_lower__RADIX_on_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on, algorithm=RADIX), Saida=(status=1)
127; type_algo_lower__RADIX_on_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on, algorithm=RADIX), Saida=(array_out=[4, 3, 2, 1])
128; type_algo_lower__BUBBLE_on2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on2, algorithm=BUBBLE), Saida=(status=1)
129; type_algo_lower__BUBBLE_on2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on2, algorithm=BUBBLE), Saida=(array_out=[4, 3, 2, 1])
130; type_algo_lower__INSERTION_on2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on2, algorithm=INSERTION), Saida=(status=1)
131; type_algo_lower__INSERTION_on2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on2, algorithm=INSERTION), Saida=(array_out=[4, 3, 2, 1])
132; type_algo_lower__SELECTION_on2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on2, algorithm=SELECTION), Saida=(status=1)
133; type_algo_lower__SELECTION_on2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on2, algorithm=SELECTION), Saida=(array_out=[4, 3, 2, 1])
134; type_algo_lower__HEAP_onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=HEAP), Saida=(status=1)
135; type_algo_lower__HEAP_onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=HEAP), Saida=(array_out=[4, 3, 2, 1])
136; type_algo_lower__MERGE_onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=MERGE), Saida=(status=1)
137; type_algo_lower__MERGE_onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=MERGE), Saida=(array_out=[4, 3, 2, 1])
138; type_algo_lower__QUICK_onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=QUICK), Saida=(status=1)
139; type_algo_lower__QUICK_onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=QUICK), Saida=(array_out=[4, 3, 2, 1])
140; type_algo_err__COUNTING_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=COUNTING), Saida=(status=1)
141; type_algo_err__COUNTING_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=COUNTING), Saida=(array_out=[4, 3, 2, 1])
142; type_algo_err__COUNTING_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=COUNTING), Saida=(status=1)
143; type_algo_err__COUNTING_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=COUNTING), Saida=(array_out=[4, 3, 2, 1])
144; type_algo_err__RADIX_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=RADIX), Saida=(status=1)
145; type_algo_err__RADIX_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=RADIX), Saida=(array_out=[4, 3, 2, 1])
146; type_algo_err__RADIX_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=RADIX), Saida=(status=1)
147; type_algo_err__RADIX_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=RADIX), Saida=(array_out=[4, 3, 2, 1])
148; type_algo_err__BUBBLE_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=BUBBLE), Saida=(status=1)
149; type_algo_err__BUBBLE_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=BUBBLE), Saida=(array_out=[4, 3, 2, 1])
150; type_algo_err__BUBBLE_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=BUBBLE), Saida=(status=1)
151; type_algo_err__BUBBLE_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=BUBBLE), Saida=(array_out=[4, 3, 2, 1])
152; type_algo_err__INSERTION_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=INSERTION), Saida=(status=1)
153; type_algo_err__INSERTION_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=INSERTION), Saida=(array_out=[4, 3, 2, 1])
154; type_algo_err__INSERTION_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=INSERTION), Saida=(status=1)
155; type_algo_err__INSERTION_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=INSERTION), Saida=(array_out=[4, 3, 2, 1])
156; type_algo_err__SELECTION_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=SELECTION), Saida=(status=1)
157; type_algo_err__SELECTION_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=SELECTION), Saida=(array_out=[4, 3, 2, 1])
158; type_algo_err__SELECTION_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=SELECTION), Saida=(status=1)
159; type_algo_err__SELECTION_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=SELECTION), Saida=(array_out=[4, 3, 2, 1])
160; type_algo_err__HEAP_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=HEAP), Saida=(status=1)
161; type_algo_err__HEAP_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=HEAP), Saida=(array_out=[4, 3, 2, 1])
162; type_algo_err__HEAP_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=HEAP), Saida=(status=1)
163; type_algo_err__HEAP_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=HEAP), Saida=(array_out=[4, 3, 2, 1])
164; type_algo_err__MERGE_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=MERGE), Saida=(status=1)
165; type_algo_err__MERGE_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=MERGE), Saida=(array_out=[4, 3, 2, 1])
166; type_algo_err__MERGE_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=MERGE), Saida=(status=1)
167; type_algo_err__MERGE_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=MERGE), Saida=(array_out=[4, 3, 2, 1])
168; type_algo_err__QUICK_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=QUICK), Saida=(status=1)
169; type_algo_err__QUICK_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=QUICK), Saida=(array_out=[4, 3, 2, 1])
170; type_algo_err__QUICK_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=QUICK), Saida=(status=1)
171; type_algo_err__QUICK_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=QUICK), Saida=(array_out=[4, 3, 2, 1])