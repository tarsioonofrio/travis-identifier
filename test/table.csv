NÃºmero do Teste; Nome do Teste; Casos de Teste
0; basic__COUNTING_On_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=COUNTING), Saida=(status=0)
1; basic__COUNTING_On_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=COUNTING), Saida=(array_out=[1, 2, 3, 4])
2; basic__RADIX_On_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=RADIX), Saida=(status=0)
3; basic__RADIX_On_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=RADIX), Saida=(array_out=[1, 2, 3, 4])
4; basic__BUBBLE_On2_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=BUBBLE), Saida=(status=0)
5; basic__BUBBLE_On2_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=BUBBLE), Saida=(array_out=[1, 2, 3, 4])
6; basic__INSERTION_On2_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=INSERTION), Saida=(status=0)
7; basic__INSERTION_On2_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=INSERTION), Saida=(array_out=[1, 2, 3, 4])
8; basic__SELECTION_On2_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=SELECTION), Saida=(status=0)
9; basic__SELECTION_On2_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=SELECTION), Saida=(array_out=[1, 2, 3, 4])
10; basic__HEAP_Onlogn_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=HEAP), Saida=(status=0)
11; basic__HEAP_Onlogn_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=HEAP), Saida=(array_out=[1, 2, 3, 4])
12; basic__MERGE_Onlogn_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=MERGE), Saida=(status=0)
13; basic__MERGE_Onlogn_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=MERGE), Saida=(array_out=[1, 2, 3, 4])
14; basic__QUICK_Onlogn_INT_0_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=QUICK), Saida=(status=0)
15; basic__QUICK_Onlogn_INT_0_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=QUICK), Saida=(array_out=[1, 2, 3, 4])
16; len1__COUNTING_On_INT_1_array; Entrada=(a=[1], length=1, type=On, algorithm=COUNTING), Saida=(status=1)
17; len1__COUNTING_On_INT_1_status; Entrada(a=[1], length=1, type=On, algorithm=COUNTING), Saida=(array_out=[1])
18; len1__RADIX_On_INT_1_array; Entrada=(a=[1], length=1, type=On, algorithm=RADIX), Saida=(status=1)
19; len1__RADIX_On_INT_1_status; Entrada(a=[1], length=1, type=On, algorithm=RADIX), Saida=(array_out=[1])
20; len1__BUBBLE_On2_INT_1_array; Entrada=(a=[1], length=1, type=On2, algorithm=BUBBLE), Saida=(status=1)
21; len1__BUBBLE_On2_INT_1_status; Entrada(a=[1], length=1, type=On2, algorithm=BUBBLE), Saida=(array_out=[1])
22; len1__INSERTION_On2_INT_1_array; Entrada=(a=[1], length=1, type=On2, algorithm=INSERTION), Saida=(status=1)
23; len1__INSERTION_On2_INT_1_status; Entrada(a=[1], length=1, type=On2, algorithm=INSERTION), Saida=(array_out=[1])
24; len1__SELECTION_On2_INT_1_array; Entrada=(a=[1], length=1, type=On2, algorithm=SELECTION), Saida=(status=1)
25; len1__SELECTION_On2_INT_1_status; Entrada(a=[1], length=1, type=On2, algorithm=SELECTION), Saida=(array_out=[1])
26; len1__HEAP_Onlogn_INT_1_array; Entrada=(a=[1], length=1, type=Onlogn, algorithm=HEAP), Saida=(status=1)
27; len1__HEAP_Onlogn_INT_1_status; Entrada(a=[1], length=1, type=Onlogn, algorithm=HEAP), Saida=(array_out=[1])
28; len1__MERGE_Onlogn_INT_1_array; Entrada=(a=[1], length=1, type=Onlogn, algorithm=MERGE), Saida=(status=1)
29; len1__MERGE_Onlogn_INT_1_status; Entrada(a=[1], length=1, type=Onlogn, algorithm=MERGE), Saida=(array_out=[1])
30; len1__QUICK_Onlogn_INT_1_array; Entrada=(a=[1], length=1, type=Onlogn, algorithm=QUICK), Saida=(status=1)
31; len1__QUICK_Onlogn_INT_1_status; Entrada(a=[1], length=1, type=Onlogn, algorithm=QUICK), Saida=(array_out=[1])
32; len2__COUNTING_On_INT_1_array; Entrada=(a=[1, 2], length=2, type=On, algorithm=COUNTING), Saida=(status=0)
33; len2__COUNTING_On_INT_1_status; Entrada(a=[1, 2], length=2, type=On, algorithm=COUNTING), Saida=(array_out=[1, 2])
34; len2__RADIX_On_INT_1_array; Entrada=(a=[1, 2], length=2, type=On, algorithm=RADIX), Saida=(status=0)
35; len2__RADIX_On_INT_1_status; Entrada(a=[1, 2], length=2, type=On, algorithm=RADIX), Saida=(array_out=[1, 2])
36; len2__BUBBLE_On2_INT_1_array; Entrada=(a=[1, 2], length=2, type=On2, algorithm=BUBBLE), Saida=(status=0)
37; len2__BUBBLE_On2_INT_1_status; Entrada(a=[1, 2], length=2, type=On2, algorithm=BUBBLE), Saida=(array_out=[1, 2])
38; len2__INSERTION_On2_INT_1_array; Entrada=(a=[1, 2], length=2, type=On2, algorithm=INSERTION), Saida=(status=0)
39; len2__INSERTION_On2_INT_1_status; Entrada(a=[1, 2], length=2, type=On2, algorithm=INSERTION), Saida=(array_out=[1, 2])
40; len2__SELECTION_On2_INT_1_array; Entrada=(a=[1, 2], length=2, type=On2, algorithm=SELECTION), Saida=(status=0)
41; len2__SELECTION_On2_INT_1_status; Entrada(a=[1, 2], length=2, type=On2, algorithm=SELECTION), Saida=(array_out=[1, 2])
42; len2__HEAP_Onlogn_INT_1_array; Entrada=(a=[1, 2], length=2, type=Onlogn, algorithm=HEAP), Saida=(status=0)
43; len2__HEAP_Onlogn_INT_1_status; Entrada(a=[1, 2], length=2, type=Onlogn, algorithm=HEAP), Saida=(array_out=[1, 2])
44; len2__MERGE_Onlogn_INT_1_array; Entrada=(a=[1, 2], length=2, type=Onlogn, algorithm=MERGE), Saida=(status=0)
45; len2__MERGE_Onlogn_INT_1_status; Entrada(a=[1, 2], length=2, type=Onlogn, algorithm=MERGE), Saida=(array_out=[1, 2])
46; len2__QUICK_Onlogn_INT_1_array; Entrada=(a=[1, 2], length=2, type=Onlogn, algorithm=QUICK), Saida=(status=0)
47; len2__QUICK_Onlogn_INT_1_status; Entrada(a=[1, 2], length=2, type=Onlogn, algorithm=QUICK), Saida=(array_out=[1, 2])
48; len20__COUNTING_On_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On, algorithm=COUNTING), Saida=(status=0)
49; len20__COUNTING_On_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On, algorithm=COUNTING), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
50; len20__RADIX_On_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On, algorithm=RADIX), Saida=(status=0)
51; len20__RADIX_On_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On, algorithm=RADIX), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
52; len20__BUBBLE_On2_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On2, algorithm=BUBBLE), Saida=(status=0)
53; len20__BUBBLE_On2_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On2, algorithm=BUBBLE), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
54; len20__INSERTION_On2_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On2, algorithm=INSERTION), Saida=(status=0)
55; len20__INSERTION_On2_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On2, algorithm=INSERTION), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
56; len20__SELECTION_On2_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On2, algorithm=SELECTION), Saida=(status=0)
57; len20__SELECTION_On2_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=On2, algorithm=SELECTION), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
58; len20__HEAP_Onlogn_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=Onlogn, algorithm=HEAP), Saida=(status=0)
59; len20__HEAP_Onlogn_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=Onlogn, algorithm=HEAP), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
60; len20__MERGE_Onlogn_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=Onlogn, algorithm=MERGE), Saida=(status=0)
61; len20__MERGE_Onlogn_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=Onlogn, algorithm=MERGE), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
62; len20__QUICK_Onlogn_INT_1_array; Entrada=(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=Onlogn, algorithm=QUICK), Saida=(status=0)
63; len20__QUICK_Onlogn_INT_1_status; Entrada(a=[19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=20, type=Onlogn, algorithm=QUICK), Saida=(array_out=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])
64; len21__COUNTING_On_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On, algorithm=COUNTING), Saida=(status=1)
65; len21__COUNTING_On_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On, algorithm=COUNTING), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
66; len21__RADIX_On_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On, algorithm=RADIX), Saida=(status=1)
67; len21__RADIX_On_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On, algorithm=RADIX), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
68; len21__BUBBLE_On2_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On2, algorithm=BUBBLE), Saida=(status=1)
69; len21__BUBBLE_On2_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On2, algorithm=BUBBLE), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
70; len21__INSERTION_On2_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On2, algorithm=INSERTION), Saida=(status=1)
71; len21__INSERTION_On2_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On2, algorithm=INSERTION), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
72; len21__SELECTION_On2_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On2, algorithm=SELECTION), Saida=(status=1)
73; len21__SELECTION_On2_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=On2, algorithm=SELECTION), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
74; len21__HEAP_Onlogn_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=Onlogn, algorithm=HEAP), Saida=(status=1)
75; len21__HEAP_Onlogn_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=Onlogn, algorithm=HEAP), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
76; len21__MERGE_Onlogn_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=Onlogn, algorithm=MERGE), Saida=(status=1)
77; len21__MERGE_Onlogn_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=Onlogn, algorithm=MERGE), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
78; len21__QUICK_Onlogn_INT_1_array; Entrada=(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=Onlogn, algorithm=QUICK), Saida=(status=1)
79; len21__QUICK_Onlogn_INT_1_status; Entrada(a=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], length=21, type=Onlogn, algorithm=QUICK), Saida=(array_out=[20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
80; size__COUNTING_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=On, algorithm=COUNTING), Saida=(status=0)
81; size__COUNTING_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=On, algorithm=COUNTING), Saida=(array_out=[2, 3, 4])
82; size__RADIX_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=On, algorithm=RADIX), Saida=(status=0)
83; size__RADIX_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=On, algorithm=RADIX), Saida=(array_out=[2, 3, 4])
84; size__BUBBLE_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=On2, algorithm=BUBBLE), Saida=(status=0)
85; size__BUBBLE_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=On2, algorithm=BUBBLE), Saida=(array_out=[2, 3, 4])
86; size__INSERTION_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=On2, algorithm=INSERTION), Saida=(status=0)
87; size__INSERTION_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=On2, algorithm=INSERTION), Saida=(array_out=[2, 3, 4])
88; size__SELECTION_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=On2, algorithm=SELECTION), Saida=(status=0)
89; size__SELECTION_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=On2, algorithm=SELECTION), Saida=(array_out=[2, 3, 4])
90; size__HEAP_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=Onlogn, algorithm=HEAP), Saida=(status=0)
91; size__HEAP_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=Onlogn, algorithm=HEAP), Saida=(array_out=[2, 3, 4])
92; size__MERGE_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=Onlogn, algorithm=MERGE), Saida=(status=0)
93; size__MERGE_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=Onlogn, algorithm=MERGE), Saida=(array_out=[2, 3, 4])
94; size__QUICK_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=3, type=Onlogn, algorithm=QUICK), Saida=(status=0)
95; size__QUICK_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=3, type=Onlogn, algorithm=QUICK), Saida=(array_out=[2, 3, 4])
96; repeat__COUNTING_On_INT_0_array; Entrada=(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=On, algorithm=COUNTING), Saida=(status=0)
97; repeat__COUNTING_On_INT_0_status; Entrada(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=On, algorithm=COUNTING), Saida=(array_out=[0, 1, 2, 3, 3, 3, 4, 5])
98; repeat__RADIX_On_INT_0_array; Entrada=(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=On, algorithm=RADIX), Saida=(status=0)
99; repeat__RADIX_On_INT_0_status; Entrada(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=On, algorithm=RADIX), Saida=(array_out=[0, 1, 2, 3, 3, 3, 4, 5])
100; repeat__BUBBLE_On2_INT_0_array; Entrada=(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=On2, algorithm=BUBBLE), Saida=(status=0)
101; repeat__BUBBLE_On2_INT_0_status; Entrada(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=On2, algorithm=BUBBLE), Saida=(array_out=[0, 1, 2, 3, 3, 3, 4, 5])
102; repeat__INSERTION_On2_INT_0_array; Entrada=(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=On2, algorithm=INSERTION), Saida=(status=0)
103; repeat__INSERTION_On2_INT_0_status; Entrada(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=On2, algorithm=INSERTION), Saida=(array_out=[0, 1, 2, 3, 3, 3, 4, 5])
104; repeat__SELECTION_On2_INT_0_array; Entrada=(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=On2, algorithm=SELECTION), Saida=(status=0)
105; repeat__SELECTION_On2_INT_0_status; Entrada(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=On2, algorithm=SELECTION), Saida=(array_out=[0, 1, 2, 3, 3, 3, 4, 5])
106; repeat__HEAP_Onlogn_INT_0_array; Entrada=(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=Onlogn, algorithm=HEAP), Saida=(status=0)
107; repeat__HEAP_Onlogn_INT_0_status; Entrada(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=Onlogn, algorithm=HEAP), Saida=(array_out=[0, 1, 2, 3, 3, 3, 4, 5])
108; repeat__MERGE_Onlogn_INT_0_array; Entrada=(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=Onlogn, algorithm=MERGE), Saida=(status=0)
109; repeat__MERGE_Onlogn_INT_0_status; Entrada(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=Onlogn, algorithm=MERGE), Saida=(array_out=[0, 1, 2, 3, 3, 3, 4, 5])
110; repeat__QUICK_Onlogn_INT_0_array; Entrada=(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=Onlogn, algorithm=QUICK), Saida=(status=0)
111; repeat__QUICK_Onlogn_INT_0_status; Entrada(a=[5, 4, 3, 3, 3, 2, 1, 0], length=8, type=Onlogn, algorithm=QUICK), Saida=(array_out=[0, 1, 2, 3, 3, 3, 4, 5])
112; negative__COUNTING_On_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On, algorithm=COUNTING), Saida=(status=0)
113; negative__COUNTING_On_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On, algorithm=COUNTING), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
114; negative__RADIX_On_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On, algorithm=RADIX), Saida=(status=0)
115; negative__RADIX_On_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On, algorithm=RADIX), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
116; negative__BUBBLE_On2_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On2, algorithm=BUBBLE), Saida=(status=0)
117; negative__BUBBLE_On2_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On2, algorithm=BUBBLE), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
118; negative__INSERTION_On2_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On2, algorithm=INSERTION), Saida=(status=0)
119; negative__INSERTION_On2_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On2, algorithm=INSERTION), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
120; negative__SELECTION_On2_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On2, algorithm=SELECTION), Saida=(status=0)
121; negative__SELECTION_On2_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=On2, algorithm=SELECTION), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
122; negative__HEAP_Onlogn_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=Onlogn, algorithm=HEAP), Saida=(status=0)
123; negative__HEAP_Onlogn_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=Onlogn, algorithm=HEAP), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
124; negative__MERGE_Onlogn_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=Onlogn, algorithm=MERGE), Saida=(status=0)
125; negative__MERGE_Onlogn_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=Onlogn, algorithm=MERGE), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
126; negative__QUICK_Onlogn_INT_0_array; Entrada=(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=Onlogn, algorithm=QUICK), Saida=(status=0)
127; negative__QUICK_Onlogn_INT_0_status; Entrada(a=[4, 3, 2, 1, 0, -1, -2, -3, -4, -5], length=10, type=Onlogn, algorithm=QUICK), Saida=(array_out=[-5, -4, -3, -2, -1, 0, 1, 2, 3, 4])
128; limit_min_ok__COUNTING_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(status=0)
129; limit_min_ok__COUNTING_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(array_out=['INT_MIN + 0', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
130; limit_min_ok__RADIX_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(status=0)
131; limit_min_ok__RADIX_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(array_out=['INT_MIN + 0', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
132; limit_min_ok__BUBBLE_On2_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=BUBBLE), Saida=(status=0)
133; limit_min_ok__BUBBLE_On2_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=BUBBLE), Saida=(array_out=['INT_MIN + 0', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
134; limit_min_ok__INSERTION_On2_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=INSERTION), Saida=(status=0)
135; limit_min_ok__INSERTION_On2_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=INSERTION), Saida=(array_out=['INT_MIN + 0', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
136; limit_min_ok__SELECTION_On2_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=SELECTION), Saida=(status=0)
137; limit_min_ok__SELECTION_On2_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=SELECTION), Saida=(array_out=['INT_MIN + 0', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
138; limit_min_ok__HEAP_Onlogn_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=HEAP), Saida=(status=0)
139; limit_min_ok__HEAP_Onlogn_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=HEAP), Saida=(array_out=['INT_MIN + 0', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
140; limit_min_ok__MERGE_Onlogn_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=MERGE), Saida=(status=0)
141; limit_min_ok__MERGE_Onlogn_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=MERGE), Saida=(array_out=['INT_MIN + 0', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
142; limit_min_ok__QUICK_Onlogn_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=QUICK), Saida=(status=0)
143; limit_min_ok__QUICK_Onlogn_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + 0', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=QUICK), Saida=(array_out=['INT_MIN + 0', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
144; limit_max_ok__COUNTING_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(status=0)
145; limit_max_ok__COUNTING_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MAX + 0'])
146; limit_max_ok__RADIX_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(status=0)
147; limit_max_ok__RADIX_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MAX + 0'])
148; limit_max_ok__BUBBLE_On2_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=BUBBLE), Saida=(status=0)
149; limit_max_ok__BUBBLE_On2_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=BUBBLE), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MAX + 0'])
150; limit_max_ok__INSERTION_On2_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=INSERTION), Saida=(status=0)
151; limit_max_ok__INSERTION_On2_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=INSERTION), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MAX + 0'])
152; limit_max_ok__SELECTION_On2_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=SELECTION), Saida=(status=0)
153; limit_max_ok__SELECTION_On2_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=SELECTION), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MAX + 0'])
154; limit_max_ok__HEAP_Onlogn_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=HEAP), Saida=(status=0)
155; limit_max_ok__HEAP_Onlogn_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=HEAP), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MAX + 0'])
156; limit_max_ok__MERGE_Onlogn_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=MERGE), Saida=(status=0)
157; limit_max_ok__MERGE_Onlogn_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=MERGE), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MAX + 0'])
158; limit_max_ok__QUICK_Onlogn_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=QUICK), Saida=(status=0)
159; limit_max_ok__QUICK_Onlogn_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 0', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=QUICK), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MAX + 0'])
160; limit_min_err__COUNTING_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(status=0)
161; limit_min_err__COUNTING_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MIN + -1'])
162; limit_min_err__RADIX_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(status=0)
163; limit_min_err__RADIX_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MIN + -1'])
164; limit_min_err__BUBBLE_On2_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=BUBBLE), Saida=(status=0)
165; limit_min_err__BUBBLE_On2_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=BUBBLE), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MIN + -1'])
166; limit_min_err__INSERTION_On2_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=INSERTION), Saida=(status=0)
167; limit_min_err__INSERTION_On2_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=INSERTION), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MIN + -1'])
168; limit_min_err__SELECTION_On2_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=SELECTION), Saida=(status=0)
169; limit_min_err__SELECTION_On2_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=SELECTION), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MIN + -1'])
170; limit_min_err__HEAP_Onlogn_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=HEAP), Saida=(status=0)
171; limit_min_err__HEAP_Onlogn_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=HEAP), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MIN + -1'])
172; limit_min_err__MERGE_Onlogn_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=MERGE), Saida=(status=0)
173; limit_min_err__MERGE_Onlogn_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=MERGE), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MIN + -1'])
174; limit_min_err__QUICK_Onlogn_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=QUICK), Saida=(status=0)
175; limit_min_err__QUICK_Onlogn_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MIN + -1', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=QUICK), Saida=(array_out=[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 'INT_MIN + -1'])
176; limit_max_err__COUNTING_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(status=0)
177; limit_max_err__COUNTING_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=COUNTING), Saida=(array_out=['INT_MAX + 1', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
178; limit_max_err__RADIX_On_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(status=0)
179; limit_max_err__RADIX_On_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=On, algorithm=RADIX), Saida=(array_out=['INT_MAX + 1', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
180; limit_max_err__BUBBLE_On2_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=BUBBLE), Saida=(status=0)
181; limit_max_err__BUBBLE_On2_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=BUBBLE), Saida=(array_out=['INT_MAX + 1', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
182; limit_max_err__INSERTION_On2_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=INSERTION), Saida=(status=0)
183; limit_max_err__INSERTION_On2_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=INSERTION), Saida=(array_out=['INT_MAX + 1', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
184; limit_max_err__SELECTION_On2_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=SELECTION), Saida=(status=0)
185; limit_max_err__SELECTION_On2_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=On2, algorithm=SELECTION), Saida=(array_out=['INT_MAX + 1', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
186; limit_max_err__HEAP_Onlogn_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=HEAP), Saida=(status=0)
187; limit_max_err__HEAP_Onlogn_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=HEAP), Saida=(array_out=['INT_MAX + 1', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
188; limit_max_err__MERGE_Onlogn_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=MERGE), Saida=(status=0)
189; limit_max_err__MERGE_Onlogn_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=MERGE), Saida=(array_out=['INT_MAX + 1', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
190; limit_max_err__QUICK_Onlogn_INT_0_array; Entrada=(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=QUICK), Saida=(status=0)
191; limit_max_err__QUICK_Onlogn_INT_0_status; Entrada(a=[5, 4, 3, 2, 1, 'INT_MAX + 1', 0, -1, -2, -3, -4], length=11, type=Onlogn, algorithm=QUICK), Saida=(array_out=['INT_MAX + 1', -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])
192; type_algo_upper__COUNTING_ON_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on, algorithm=COUNTING), Saida=(status=1)
193; type_algo_upper__COUNTING_ON_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on, algorithm=COUNTING), Saida=(array_out=[4, 3, 2, 1])
194; type_algo_upper__RADIX_ON_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on, algorithm=RADIX), Saida=(status=1)
195; type_algo_upper__RADIX_ON_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on, algorithm=RADIX), Saida=(array_out=[4, 3, 2, 1])
196; type_algo_upper__BUBBLE_ON2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on2, algorithm=BUBBLE), Saida=(status=1)
197; type_algo_upper__BUBBLE_ON2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on2, algorithm=BUBBLE), Saida=(array_out=[4, 3, 2, 1])
198; type_algo_upper__INSERTION_ON2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on2, algorithm=INSERTION), Saida=(status=1)
199; type_algo_upper__INSERTION_ON2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on2, algorithm=INSERTION), Saida=(array_out=[4, 3, 2, 1])
200; type_algo_upper__SELECTION_ON2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on2, algorithm=SELECTION), Saida=(status=1)
201; type_algo_upper__SELECTION_ON2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on2, algorithm=SELECTION), Saida=(array_out=[4, 3, 2, 1])
202; type_algo_upper__HEAP_ONLOGN_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=HEAP), Saida=(status=1)
203; type_algo_upper__HEAP_ONLOGN_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=HEAP), Saida=(array_out=[4, 3, 2, 1])
204; type_algo_upper__MERGE_ONLOGN_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=MERGE), Saida=(status=1)
205; type_algo_upper__MERGE_ONLOGN_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=MERGE), Saida=(array_out=[4, 3, 2, 1])
206; type_algo_upper__QUICK_ONLOGN_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=QUICK), Saida=(status=1)
207; type_algo_upper__QUICK_ONLOGN_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=QUICK), Saida=(array_out=[4, 3, 2, 1])
208; type_algo_lower__COUNTING_on_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on, algorithm=COUNTING), Saida=(status=1)
209; type_algo_lower__COUNTING_on_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on, algorithm=COUNTING), Saida=(array_out=[4, 3, 2, 1])
210; type_algo_lower__RADIX_on_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on, algorithm=RADIX), Saida=(status=1)
211; type_algo_lower__RADIX_on_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on, algorithm=RADIX), Saida=(array_out=[4, 3, 2, 1])
212; type_algo_lower__BUBBLE_on2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on2, algorithm=BUBBLE), Saida=(status=1)
213; type_algo_lower__BUBBLE_on2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on2, algorithm=BUBBLE), Saida=(array_out=[4, 3, 2, 1])
214; type_algo_lower__INSERTION_on2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on2, algorithm=INSERTION), Saida=(status=1)
215; type_algo_lower__INSERTION_on2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on2, algorithm=INSERTION), Saida=(array_out=[4, 3, 2, 1])
216; type_algo_lower__SELECTION_on2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=on2, algorithm=SELECTION), Saida=(status=1)
217; type_algo_lower__SELECTION_on2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=on2, algorithm=SELECTION), Saida=(array_out=[4, 3, 2, 1])
218; type_algo_lower__HEAP_onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=HEAP), Saida=(status=1)
219; type_algo_lower__HEAP_onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=HEAP), Saida=(array_out=[4, 3, 2, 1])
220; type_algo_lower__MERGE_onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=MERGE), Saida=(status=1)
221; type_algo_lower__MERGE_onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=MERGE), Saida=(array_out=[4, 3, 2, 1])
222; type_algo_lower__QUICK_onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=QUICK), Saida=(status=1)
223; type_algo_lower__QUICK_onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=onlogn, algorithm=QUICK), Saida=(array_out=[4, 3, 2, 1])
224; type_algo_err__COUNTING_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=COUNTING), Saida=(status=1)
225; type_algo_err__COUNTING_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=COUNTING), Saida=(array_out=[4, 3, 2, 1])
226; type_algo_err__COUNTING_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=COUNTING), Saida=(status=1)
227; type_algo_err__COUNTING_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=COUNTING), Saida=(array_out=[4, 3, 2, 1])
228; type_algo_err__RADIX_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=RADIX), Saida=(status=1)
229; type_algo_err__RADIX_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=RADIX), Saida=(array_out=[4, 3, 2, 1])
230; type_algo_err__RADIX_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=RADIX), Saida=(status=1)
231; type_algo_err__RADIX_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=RADIX), Saida=(array_out=[4, 3, 2, 1])
232; type_algo_err__BUBBLE_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=BUBBLE), Saida=(status=1)
233; type_algo_err__BUBBLE_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=BUBBLE), Saida=(array_out=[4, 3, 2, 1])
234; type_algo_err__BUBBLE_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=BUBBLE), Saida=(status=1)
235; type_algo_err__BUBBLE_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=BUBBLE), Saida=(array_out=[4, 3, 2, 1])
236; type_algo_err__INSERTION_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=INSERTION), Saida=(status=1)
237; type_algo_err__INSERTION_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=INSERTION), Saida=(array_out=[4, 3, 2, 1])
238; type_algo_err__INSERTION_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=INSERTION), Saida=(status=1)
239; type_algo_err__INSERTION_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=INSERTION), Saida=(array_out=[4, 3, 2, 1])
240; type_algo_err__SELECTION_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=SELECTION), Saida=(status=1)
241; type_algo_err__SELECTION_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=SELECTION), Saida=(array_out=[4, 3, 2, 1])
242; type_algo_err__SELECTION_Onlogn_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=SELECTION), Saida=(status=1)
243; type_algo_err__SELECTION_Onlogn_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=Onlogn, algorithm=SELECTION), Saida=(array_out=[4, 3, 2, 1])
244; type_algo_err__HEAP_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=HEAP), Saida=(status=1)
245; type_algo_err__HEAP_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=HEAP), Saida=(array_out=[4, 3, 2, 1])
246; type_algo_err__HEAP_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=HEAP), Saida=(status=1)
247; type_algo_err__HEAP_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=HEAP), Saida=(array_out=[4, 3, 2, 1])
248; type_algo_err__MERGE_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=MERGE), Saida=(status=1)
249; type_algo_err__MERGE_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=MERGE), Saida=(array_out=[4, 3, 2, 1])
250; type_algo_err__MERGE_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=MERGE), Saida=(status=1)
251; type_algo_err__MERGE_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=MERGE), Saida=(array_out=[4, 3, 2, 1])
252; type_algo_err__QUICK_On_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On, algorithm=QUICK), Saida=(status=1)
253; type_algo_err__QUICK_On_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On, algorithm=QUICK), Saida=(array_out=[4, 3, 2, 1])
254; type_algo_err__QUICK_On2_INT_1_array; Entrada=(a=[4, 3, 2, 1], length=4, type=On2, algorithm=QUICK), Saida=(status=1)
255; type_algo_err__QUICK_On2_INT_1_status; Entrada(a=[4, 3, 2, 1], length=4, type=On2, algorithm=QUICK), Saida=(array_out=[4, 3, 2, 1])